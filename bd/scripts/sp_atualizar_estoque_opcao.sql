-- Atualiza o estoque de cada Item da Opção
CREATE OR REPLACE PROCEDURE ATUALIZAR_ESTOQUE_OPCAO(
  COD_OPCAO OPCOES.CODIGO%TYPE,
  QTD NUMBER
)
IS
  V_TIPO VARCHAR2(1);
  
  CURSOR C_CUR IS
    SELECT I.DESCRICAO, I.CODIGO
    FROM ITENS I
    JOIN COMIDA_ITENS CI
      ON CI.COD_ITEM = I.CODIGO
    JOIN COMIDAS C
      ON C.CODIGO = CI.COD_COMIDA
    JOIN OPCOES O
      ON O.CODIGO = C.CODIGO;
      
  CURSOR B_CUR IS
    SELECT I.DESCRICAO, I.CODIGO
    FROM ITENS I
    JOIN BEBIDA_ITENS BI
      ON BI.COD_ITEM = I.CODIGO
    JOIN BEBIDAS B
      ON B.CODIGO = BI.COD_BEBIDA
    JOIN OPCOES O
      ON O.CODIGO = B.CODIGO;
      
  CURSOR P_CUR IS
    SELECT BP.CODIGO
    FROM BEBIDAS_PRONTAS BP
    JOIN OPCOES O
      ON O.CODIGO = BP.CODIGO;
      
  C_RECORD C_CUR%ROWTYPE;
  B_RECORD B_CUR%ROWTYPE;
  P_RECORD P_CUR%ROWTYPE;
BEGIN
  SELECT TIPO INTO V_TIPO
  FROM OPCOES
  WHERE CODIGO = COD_OPCAO;
  
  IF(V_TIPO = 'P') THEN
    FOR P_RECORD IN P_CUR LOOP
      CONTROLE_ESTOQUE(P_RECORD.CODIGO, QTD);
    END LOOP;
  END IF;
  
  IF(V_TIPO = 'C') THEN
    FOR P_RECORD IN P_CUR LOOP
      CONTROLE_ESTOQUE(C_RECORD.CODIGO, QTD);
    END LOOP;
  END IF;
  
  IF(V_TIPO = 'B') THEN
    FOR P_RECORD IN P_CUR LOOP
      CONTROLE_ESTOQUE(B_RECORD.CODIGO, QTD);
    END LOOP;
  END IF;
END;
/
BEGIN
  ATUALIZAR_ESTOQUE_OPCAO(5, 1);
END;
/

SELECT * FROM OPCOES;
SELECT * FROM ESTOQUE;