-- Adiciona o valor da Opção na Comanda, e realiza controle de comanda e estoque
-- Recebe NUMBER Código Opção, NUMBER Código Comanda, NUMBER Quantidade
CREATE OR REPLACE PROCEDURE ADICIONAR_OPCAO_COMANDA(
  I_COD_OPCAO OPCOES.CODIGO%TYPE,
  I_COD_COMANDA COMANDAS.CODIGO%TYPE,
  I_QUANTIDADE COMANDA_OPCOES.QUANTIDADE%TYPE
)
IS
  EX_QUANTIDADE_INVALIDA EXCEPTION;
  EX_OPCAO_INVALIDA EXCEPTION;
  EX_COMANDA_INVALIDA EXCEPTION;
  V_COUNT_OPCOES NUMBER;
  V_COUNT_COMANDAS NUMBER;
  V_VALOR_OPCAO NUMBER;
BEGIN
  COMMIT;

  IF I_QUANTIDADE < 1 THEN
    RAISE EX_QUANTIDADE_INVALIDA;
  END IF;

  SELECT COUNT(CODIGO) INTO V_COUNT_OPCOES
  FROM OPCOES
  WHERE CODIGO = I_COD_OPCAO;

  IF V_COUNT_OPCOES < 1 THEN
    RAISE EX_OPCAO_INVALIDA;
  END IF;

  SELECT COUNT(CODIGO) INTO V_COUNT_COMANDAS
  FROM COMANDAS
  WHERE CODIGO = I_COD_COMANDA;

  IF V_COUNT_COMANDAS < 1 THEN
    RAISE EX_COMANDA_INVALIDA;
  END IF;

  SELECT I_QUANTIDADE * VALOR_OPCAO(I_COD_OPCAO) INTO V_VALOR_OPCAO
  FROM DUAL;

  INSERT INTO COMANDA_OPCOES (CODIGO, COD_COMANDA, COD_OPCAO, QUANTIDADE)
  VALUES (SEQ_COMANDA_OP.NEXTVAL, I_COD_COMANDA, I_COD_OPCAO, I_QUANTIDADE);

  UPDATE COMANDAS
  SET VALOR = VALOR + V_VALOR_OPCAO
  WHERE CODIGO = I_COD_COMANDA;

  ATUALIZAR_ESTOQUE_OPCAO(I_COD_OPCAO, I_QUANTIDADE); -- Nesta linha a SP controla o estoque

  COMMIT;
  EXCEPTION
    WHEN EX_QUANTIDADE_INVALIDA THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Quantidade inválida');
    WHEN EX_OPCAO_INVALIDA THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Código de Opção inválido');
    WHEN EX_COMANDA_INVALIDA THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Código de comanda inválido');
END;
/
