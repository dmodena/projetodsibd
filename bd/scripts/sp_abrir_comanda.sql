-- Abre comanda para início de serviço
-- Recebe NUMBER Codigo Atendente, NUMBER Número Mesa, NUMBER Qtd Pessoas, NUMBER Valor Couvert
CREATE OR REPLACE PROCEDURE ABRIR_COMANDA(
  I_COD_ATENDENTE ATENDENTES.CODIGO%TYPE,
  I_COD_MESA MESAS.NUMERO%TYPE,
  I_QTD_PESSOAS COMANDAS.QTD_PESSOAS%TYPE,
  I_COUVERT COMANDAS.COUVERT%TYPE
)
IS
  EX_ATENDENTE_INVALIDO EXCEPTION;
  EX_MESA_INVALIDA EXCEPTION;
  V_COUNT_ATENDENTES NUMBER;
  V_COUNT_MESAS NUMBER;
BEGIN
  COMMIT;

  SELECT COUNT(CODIGO) INTO V_COUNT_ATENDENTES
  FROM ATENDENTES
  WHERE CODIGO = I_COD_ATENDENTE;

  IF V_COUNT_ATENDENTES < 1 THEN
    RAISE EX_ATENDENTE_INVALIDO;
  END IF;

  SELECT COUNT(NUMERO) INTO V_COUNT_MESAS
  FROM MESAS
  WHERE NUMERO = I_COD_MESA;

  IF V_COUNT_MESAS < 1 THEN
    RAISE EX_MESA_INVALIDA;
  END IF;

  INSERT INTO COMANDAS (CODIGO, COD_ATENDENTE, COD_MESA, HORA_INICIO, QTD_PESSOAS, COUVERT)
  VALUES (SEQ_COMANDA.NEXTVAL, I_COD_ATENDENTE, I_COD_MESA, SYSDATE, I_QTD_PESSOAS, I_COUVERT);

  COMMIT;
  EXCEPTION
    WHEN EX_ATENDENTE_INVALIDO THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Código de Atendente inválido');
    WHEN EX_MESA_INVALIDA THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Código de Mesa invalido');
END;
/
